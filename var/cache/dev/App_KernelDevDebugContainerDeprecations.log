a:2:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Doctrine\Common\EventSubscriber::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\ContactSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/home/stagiaire/Bureau/the_district_symfony/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:338;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/home/stagiaire/Bureau/the_district_symfony/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:214:"Since api-platform/core 3.1: In API Platform 4 PUT will always replace the data, use extraProperties["standard_put"] to "true" on every operation to avoid breaking PUT's behavior. Use PATCH to use the old behavior.";s:4:"file";s:93:"/home/stagiaire/Bureau/the_district_symfony/vendor/symfony/deprecation-contracts/function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:147:"/home/stagiaire/Bureau/the_district_symfony/vendor/api-platform/core/src/Metadata/Resource/Factory/DeprecationResourceMetadataCollectionFactory.php";s:4:"line";i:52;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:2;}}